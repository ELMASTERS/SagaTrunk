-- Saga is Licensed under Creative Commons Attribution-NonCommerial-ShareAlike 3.0 License
-- http://creativecommons.org/licenses/by-nc-sa/3.0/
-- Generated By Quest Extractor on 2/8/2008 3:46:16 PM

local QuestID = 223;
local ReqClv = 14;
local ReqJlv = 0;
local NextQuest = 224;
local RewZeny = 536;
local RewCxp = 1215;
local RewJxp = 477;
local RewWxp = 0;
local RewItem1 = 1700113;
local RewItem2 = 0;
local RewItemCount1 = 13;
local RewItemCount2 = 0;
local StepID = 0;

-- Modify steps below for gameplay

function QUEST_START(cid)
	Saga.AddStep(cid, QuestID, 22301);
	Saga.AddStep(cid, QuestID, 22302);
	Saga.AddStep(cid, QuestID, 22303);
	Saga.AddStep(cid, QuestID, 22304);
	Saga.InsertQuest(cid, QuestID, 1);
	return 0;
end

function QUEST_FINISH(cid)
	-- Gives all rewards
	Saga.GiveItem(cid, RewItem1, RewItemCount1);
	Saga.GiveZeny(cid, RewZeny);
	Saga.GiveExp(cid, RewCxp, RewJxp, RewWxp);
	Saga.InsertQuest(cid, QuestID, 1);
	return 0;
end

function QUEST_CANCEL(cid)
	return 0;
end

function QUEST_STEP_1(cid, StepID)
	-- Talk with Regina Salisbury
	Saga.AddWaypoint(cid, QuestID, StepID, 1, 1010);
	
	-- Check for completion
	local ret = Saga.GetNPCIndex(cid);
	if ret == 1010 then
		Saga.GeneralDialog(cid, 3114);
		Saga.SubstepComplete(cid, QuestID, StepID, 1);
	end
	
	-- Check if all substeps are completed
	for i = 1, 1 do
		if Saga.IsSubStepCompleted(cid, QuestID, StepID, i) == false then
			return -1;
		end
	end
	
	Saga.ClearWaypoints(cid, QuestID);
	Saga.StepComplete(cid, QuestID, StepID);
	return 0;
end

function QUEST_STEP_2(cid, StepID)
	-- Find Spore pocket (3);
	-- Loot Potemkin (3);
	
	Saga.FindQuestItem(cid, QuestID, StepID, 10081, 4010, 8000, 3, 1);
	Saga.FindQuestItem(cid, QuestID, StepID, 10082, 4010, 8000, 3, 1);
	Saga.FindQuestItem(cid, QuestID, StepID, 10116, 4011, 8000, 3, 2);
	Saga.FindQuestItem(cid, QuestID, StepID, 10116, 4011, 8000, 3, 2);
	
	-- Check if all substeps are completed
	for i = 1, 2 do
		if Saga.IsSubStepCompleted(cid, QuestID, StepID, i) == false then
			return -1;
		end
	end
	
	Saga.StepComplete(cid, QuestID, StepID);
	return 0;
end

function QUEST_STEP_3(cid, StepID)
	-- Receive '???' from Magnet Wilhelmina
	Saga.AddWaypoint(cid, QuestID, StepID, 1, 1007);
	
	-- Check for completion
	local ret = Saga.GetNPCIndex(cid);
	if ret == 1007 then
		Saga.GeneralDialog(cid, 3117);
	
		local freeslots = Saga.FreeInventoryCount(cid, 0);
		local ItemCountA = Saga.CheckUserInventory(cid, 4010);
		local ItemCountB = Saga.CheckUserInventory(cid, 4011);
		if ItemCountA > 2 and ItemCountB > 2 and freeslots > 0 then
			Saga.NpcTakeItem(cid, 4010, 3);
			Saga.NpcTakeItem(cid, 4011, 3);
			Saga.NpcGiveItem(cid, 4012, 1);
			Saga.SubstepComplete(cid, QuestID, StepID, 1);
		end
	end
	
	-- Check if all substeps are completed
	for i = 1, 1 do
		if Saga.IsSubStepCompleted(cid, QuestID, StepID, i) == false then
			return -1;
		end
	end
	
	Saga.ClearWaypoints(cid, QuestID);
	Saga.StepComplete(cid, QuestID, StepID);
	return 0;
end

function QUEST_STEP_4(cid, StepID)
	-- Report to Regina Salisbury
	Saga.AddWaypoint(cid, QuestID, StepID, 1, 1010);
	
	-- Check for completion
	local ret = Saga.GetNPCIndex(cid);
	if ret == 1010 then
		Saga.GeneralDialog(cid, 3120);

		local ItemCountA = Saga.CheckUserInventory(cid, 4012);
		if ItemCountA > 2  then
			Saga.NpcTakeItem(cid, 4012, 1);
			Saga.SubstepComplete(cid, QuestID, StepID, 1);
		end
	end
	
	-- Check if all substeps are completed
	for i = 1, 1 do
		if Saga.IsSubStepCompleted(cid, QuestID, StepID, i) == false then
			return -1;
		end
	end
	
	Saga.ClearWaypoints(cid, QuestID);
	Saga.StepComplete(cid, QuestID, StepID);
	Saga.QuestComplete(cid, QuestID);
	return -1;
end

function QUEST_CHECK(cid)
	local CurStepID = Saga.GetStepIndex(cid, QuestID);
	local StepID = CurStepID;
	local ret = -1;

	if CurStepID == 22301 then
		ret = QUEST_STEP_1(cid, StepID);
	elseif CurStepID == 22302 then
		ret = QUEST_STEP_2(cid, StepID);
	elseif CurStepID == 22303 then
		ret = QUEST_STEP_2(cid, StepID);
	elseif CurStepID == 22304 then
		ret = QUEST_STEP_3(cid, StepID);
	end
	
	if ret == 0 then
		QUEST_CHECK(cid);
	end
	
	return ret;
end
