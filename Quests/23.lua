-- Saga is Licensed under Creative Commons Attribution-NonCommerial-ShareAlike 3.0 License
-- http://creativecommons.org/licenses/by-nc-sa/3.0/
-- Generated By Quest Extractor on 2/8/2008 3:46:14 PM

local QuestID = 23;
local ReqClv = 9;
local ReqJlv = 0;
local NextQuest = 0;
local RewZeny = 209;
local RewCxp = 1223;
local RewJxp = 445;
local RewWxp = 0;
local RewItem1 = 1700113;
local RewItem2 = 0;
local RewItemCount1 = 4;
local RewItemCount2 = 0;
local StepID = 0;

-- Modify steps below for gameplay
function QUEST_VERIFY(cid)
	Saga.GeneralDialog(cid, 3957);
	return 0;
end

function QUEST_START(cid)
	-- Initialize all quest steps
	-- Initialize all starting navigation points

	Saga.AddStep(cid, QuestID, 2301);
	Saga.AddStep(cid, QuestID, 2302);
	Saga.AddStep(cid, QuestID, 2304);
	Saga.InsertQuest(cid, QuestID, 2);

	return 0;
end

function QUEST_FINISH(cid)
	-- Gives all rewards
	local freeslots = Saga.FreeInventoryCount(cid, 0);
	if freeslots > 0 then
		Saga.GiveZeny(cid, RewZeny);
		Saga.GiveExp(cid, RewCxp, RewJxp, RewWxp);
		Saga.GiveItem(cid, RewItem1, RewItemCount1);
		return 0;
	else
		Saga.EmptyInventory(cid);
		return -1;
	end
end

function QUEST_CANCEL(cid)
	-- Do nothing
	return 0;
end

function QUEST_STEP_1(cid, StepID)
	-- Talk with Averro Reinhold;
	-- Talk with Klaret Natali;
	-- Talk with Misha Berardini;
	-- Talk with Zarko Ruzzoli;
	
	Saga.AddWaypoint(cid, QuestID, StepID, 1, 1004);
	Saga.AddWaypoint(cid, QuestID, StepID, 2, 1001);
	--Saga.AddWaypoint(cid, QuestID, StepID, 3, 1000);
	Saga.AddWaypoint(cid, QuestID, StepID, 4, 1005);
	Saga.SubstepComplete(cid, QuestID, StepID, 3);
	
	-- Check for completion
	local ret = Saga.GetNPCIndex(cid);
	if ret == 1004 then
		Saga.GeneralDialog(cid, 3936);
		Saga.SubstepComplete(cid, QuestID, StepID, 1);
	elseif ret == 1001 then
		Saga.GeneralDialog(cid, 3936);
		Saga.SubstepComplete(cid, QuestID, StepID, 2);
	elseif ret == 1005 then
		Saga.GeneralDialog(cid, 3936);
		Saga.SubstepComplete(cid, QuestID, StepID, 4);
	else
		return -1;
	end
	
	-- Check if all substeps are completed
	for i = 1, 4 do
		if Saga.IsSubStepCompleted(cid, QuestID, StepID, i) == false then
			return -1;
		end
	end

	Saga.ClearWaypoints(cid, QuestID);
	Saga.StepComplete(cid, QuestID, StepID);
	return 0;
end

function QUEST_STEP_2(cid, StepID)
	-- Investigate the Entrance of Emir Cave
	-- Learn Klaret Natali Hodemimes secret;
	-- Learn Misha Berardini Hodemimes secret;
	-- Learn Zarko Ruzzoli Hodemimes secret;
	
	Saga.FindPosition(cid, QuestID, StepID, 1, -26923, 38275, 4040, 2, 1000);
	Saga.FindQuestItem(cid, QuestID, StepID, 13, 2648, 10000, 1, 2);
	Saga.FindQuestItem(cid, QuestID, StepID, 14, 2649, 10000, 1, 3);
	Saga.FindQuestItem(cid, QuestID, StepID, 15, 2650, 10000, 1, 4);
	
	-- (De-)Activates the Action Objectd on request
	if Saga.IsSubStepCompleted(cid, QuestID, StepID, 2) == false then
		Saga.UserUpdateActionObjectType(cid, QuestID, StepID, 13, 0);
	else
		Saga.UserUpdateActionObjectType(cid, QuestID, StepID, 13, 1);
	end
	
	if Saga.IsSubStepCompleted(cid, QuestID, StepID, 3) == false then
		Saga.UserUpdateActionObjectType(cid, QuestID, StepID, 14, 0);
	else
		Saga.UserUpdateActionObjectType(cid, QuestID, StepID, 14, 1);
	end
	
	if Saga.IsSubStepCompleted(cid, QuestID, StepID, 4) == false then
		Saga.UserUpdateActionObjectType(cid, QuestID, StepID, 15, 0);
	else
		Saga.UserUpdateActionObjectType(cid, QuestID, StepID, 15, 1);
	end
	
	-- Check if all substeps are completed
	for i = 1, 4 do
		if Saga.IsSubStepCompleted(cid, QuestID, StepID, i) == false then
			return -1;
		end
	end

	Saga.StepComplete(cid, QuestID, StepID);
	return 0;
end

function QUEST_STEP_3(cid, StepID)
	-- Report to Shelphy Adriana
	Saga.AddWaypoint(cid, QuestID, 2304, 1, 1002);
	
	-- Check for completion
	local ItemCountA = Saga.CheckUserInventory(cid, 2648);
	local ItemCountB = Saga.CheckUserInventory(cid, 2649);
	local ItemCountC = Saga.CheckUserInventory(cid, 2650);
	
	local ret = Saga.GetNPCIndex(cid);
	if ret == 1002 then
		Saga.GeneralDialog(cid, 3936);
		if ItemCountA > 0 and ItemCountB > 0 and ItemCountC > 0 then
			Saga.NpcTakeItem(cid, 2648, 1);
			Saga.NpcTakeItem(cid, 2649, 1);
			Saga.NpcTakeItem(cid, 2650, 1);
			Saga.SubstepComplete(cid, QuestID, StepID, 1);
		end
	end
	
	-- Check if all substeps are completed
	for i = 1, 1 do
		if Saga.IsSubStepCompleted(cid, QuestID, StepID, i) == false then
			return -1;
		end
	end
	
	
	Saga.ClearWaypoints(cid, QuestID);
	Saga.StepComplete(cid, QuestID, StepID);
	Saga.QuestComplete(cid, QuestID);
	return -1;
end

function QUEST_CHECK(cid)
	-- Check all steps for progress
	local CurStepID = Saga.GetStepIndex(cid, QuestID);
	local ret = -1;
	local StepID = CurStepID;
	
	if CurStepID == 2301 then
		ret = QUEST_STEP_1(cid, StepID);
	elseif CurStepID == 2302 then
		ret = QUEST_STEP_2(cid, StepID);
	elseif CurStepID == 2304 then
		ret = QUEST_STEP_3(cid, StepID);
	end
	
	if ret == 0 then
		QUEST_CHECK(cid);
	end
	
	return ret;
end
