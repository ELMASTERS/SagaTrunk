-- Saga is Licensed under Creative Commons Attribution-NonCommerial-ShareAlike 3.0 License
-- http://creativecommons.org/licenses/by-nc-sa/3.0/
-- Generated By Quest Extractor on 2/8/2008 3:46:18 PM

local QuestID = 392;
local ReqClv = 23;
local ReqJlv = 0;
local NextQuest = 0;
local RewZeny = 688;
local RewCxp = 4620;
local RewJxp = 1835;
local RewWxp = 0;
local RewItem1 = 0;
local RewItem2 = 0;
local RewItemCount1 = 0;
local RewItemCount2 = 0;
local StepID = 0;

-- Modify steps below for gameplay

function QUEST_START(cid)
	Saga.AddStep(cid, QuestID, 39201);
	Saga.AddStep(cid, QuestID, 39202);
	Saga.AddStep(cid, QuestID, 39203);
	Saga.InsertQuest(cid, QuestID, 1);
	return 0;
end

function QUEST_FINISH(cid)
	-- Gives all rewards
	Saga.GiveItem(cid, RewItem1, RewItemCount1);
	Saga.GiveZeny(cid, RewZeny);
	Saga.GiveExp(cid, RewCxp, RewJxp, RewWxp);
	return 0;
end

function QUEST_CANCEL(cid)
	return 0;
end

function QUEST_STEP_1(cid, StepID)
	-- Talk with Volker Stanwood
	Saga.AddWaypoint(cid, QuestID, StepID, 1, 1009);
	
	-- Check for completion
	local ret = Saga.GetNPCIndex(cid);
	if ret == 1009 then
		Saga.GeneralDialog(cid, 3874);
		Saga.SubstepComplete(cid, QuestID, StepID, 1);
	end
	
	-- Check if all substeps are completed
	for i = 1, 1 do
		if Saga.IsSubStepCompleted(cid, QuestID, StepID, i) == false then
			return -1;
		end
	end
	
	Saga.ClearWaypoints(cid, QuestID);
	Saga.StepComplete(cid, QuestID, StepID);
	return 0;
end

function QUEST_STEP_2(cid, StepID)
	Saga.FindQuestItem(cid, QuestID, StepID, 40, 51500001, 10000, 1, 1);
	Saga.FindQuestItem(cid, QuestID, StepID, 41, 51500001, 10000, 1, 2);
	Saga.FindQuestItem(cid, QuestID, StepID, 42, 51500001, 10000, 1, 3);
	Saga.FindQuestItem(cid, QuestID, StepID, 43, 51500001, 10000, 1, 4);

	-- (De-)Activates the Action Objectd on request
	if Saga.IsSubStepCompleted(cid, QuestID, StepID, 1) == false then
		Saga.UserUpdateActionObjectType(cid, QuestID, StepID, 40, 0);
	else
		Saga.UserUpdateActionObjectType(cid, QuestID, StepID, 40, 1);
	end
	
	if Saga.IsSubStepCompleted(cid, QuestID, StepID, 2) == false then
		Saga.UserUpdateActionObjectType(cid, QuestID, StepID, 41, 0);
	else
		Saga.UserUpdateActionObjectType(cid, QuestID, StepID, 41, 1);
	end
	
	if Saga.IsSubStepCompleted(cid, QuestID, StepID, 3) == false then
		Saga.UserUpdateActionObjectType(cid, QuestID, StepID, 42, 0);
	else
		Saga.UserUpdateActionObjectType(cid, QuestID, StepID, 42, 1);
	end
	
	if Saga.IsSubStepCompleted(cid, QuestID, StepID, 4) == false then
		Saga.UserUpdateActionObjectType(cid, QuestID, StepID, 43, 0);
	else
		Saga.UserUpdateActionObjectType(cid, QuestID, StepID, 43, 1);
	end

	-- Check if all substeps are completed
	for i = 1, 4 do
		if Saga.IsSubStepCompleted(cid, QuestID, StepID, i) == false then
			return -1;
		end
	end
	
	Saga.StepComplete(cid, QuestID, StepID);
	return 0;
end

function QUEST_STEP_3(cid, StepID)
	-- Report to Volker Stanwood
	Saga.AddWaypoint(cid, QuestID, StepID, 1, 1009);
	
	-- Check for completion
	local ret = Saga.GetNPCIndex(cid);
	if ret == 1009 then
		Saga.GeneralDialog(cid, 3877);
		Saga.SubstepComplete(cid, QuestID, StepID, 1);
	end
	
	-- Check if all substeps are completed
	for i = 1, 1 do
		if Saga.IsSubStepCompleted(cid, QuestID, StepID, i) == false then
			return -1;
		end
	end
	
	Saga.ClearWaypoints(cid, QuestID);
	Saga.StepComplete(cid, QuestID, StepID);
	Saga.QuestComplete(cid, QuestID);
	return -1;
end

function QUEST_CHECK(cid)
	local CurStepID = Saga.GetStepIndex(cid, QuestID);
	local StepID = CurStepID;
	local ret = -1;

	if CurStepID == 39201 then
		ret = QUEST_STEP_1(cid, StepID);
	elseif CurStepID == 39202 then
		ret = QUEST_STEP_2(cid, StepID);
	elseif CurStepID == 39203 then
		ret = QUEST_STEP_3(cid, StepID);
	end
	
	if ret == 0 then
		QUEST_CHECK(cid);
	end
	
	return ret;
end
